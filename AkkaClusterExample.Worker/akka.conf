akka {    
  log-config-on-start = on
  extensions = ["Akka.Cluster.Tools.PublishSubscribe.DistributedPubSubExtensionProvider,Akka.Cluster.Tools"]
  # Cluster needed for pub-sub
  actor.provider = cluster
  remote {      
        dot-netty.tcp {
          transport-class = "Akka.Remote.Transport.DotNetty.TcpTransport, Akka.Remote"
          applied-adapters = []
          transport-protocol = tcp
          port = {{CLUSTER_PORT}}
          hostname = {{CLUSTER_IP}}
        }
  }
  cluster {
       seed-nodes = ["akka.tcp://akkaexample@lighthouse:4053"] # address of seed node
       roles = ["worker", "pubsub"] # roles this member is in
       role.web.min-nr-of-members = 1                     
       pub-sub {
        name = distributedPubSubMediator
        role = "pubsub"
       }

       singleton {       
         # When a node is becoming oldest it sends hand-over request to previous oldest, 
         # that might be leaving the cluster. This is retried with this interval until 
         # the previous oldest confirms that the hand over has started or the previous 
         # oldest member is removed from the cluster (+ akka.cluster.down-removal-margin).
         hand-over-retry-interval = 1s
       
         # The number of retries are derived from hand-over-retry-interval and
         # akka.cluster.down-removal-margin (or ClusterSingletonManagerSettings.RemovalMargin),
         # but it will never be less than this property.
         min-number-of-hand-over-retries = 10
       }
  }
}

petabridge.cmd {
	log-palettes-on-startup = off
    host = "0.0.0.0"
    port = 9110
}