akka {    
  log-config-on-start = on
  extensions = ["Akka.Cluster.Tools.PublishSubscribe.DistributedPubSubExtensionProvider,Akka.Cluster.Tools"]
  # Cluster needed for pub-sub
  actor.provider = cluster
  remote {      
        dot-netty.tcp {
          transport-class = "Akka.Remote.Transport.DotNetty.TcpTransport, Akka.Remote"
          applied-adapters = []
          transport-protocol = tcp
          port = {{CLUSTER_PORT}}
          hostname = {{CLUSTER_IP}}
        }
  }
  cluster {
       seed-nodes = ["akka.tcp://akkaexample@lighthouse:4053"] # address of seed node
       roles = ["web", "pubsub"] # roles this member is in
       role.web.min-nr-of-members = 1                     
       pub-sub {
        name = distributedPubSubMediator
        role = "pubsub"
       }
       
       sharding.state-store-mode = "ddata"
       singleton.state-store-mode = "ddata"
       
       singleton-proxy {             
         # Interval at which the proxy will try to resolve the singleton instance.
         singleton-identification-interval = 5s
       
         # If the location of the singleton is unknown the proxy will buffer this
         # number of messages and deliver them when the singleton is identified. 
         # When the buffer is full old messages will be dropped when new messages are
         # sent via the proxy.
         # Use 0 to disable buffering, i.e. messages will be dropped immediately if
         # the location of the singleton is unknown.
         # Maximum allowed buffer size is 10000.
         buffer-size = 1000 
      }
    }
}
petabridge.cmd {
	log-palettes-on-startup = off
    host = "0.0.0.0"
    port = 9110
}
